//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
public:
    vector<int> pre;
	vector<int> used;
	int T=0;
	int n,m;
	vector<vector<int>> g;
    bool try_kuhn(int u){
        if( used[u]==T) return false;
        used[u]=T;
        for(int v=0;v<n;v++)
            if(g[u][v])
            {
                if(pre[v]==-1 || try_kuhn(pre[v]))
                {
                    pre[v]=u;
                    return true;
                }
            }
           return false;
    }
	int maximumMatch(vector<vector<int>>&G){
	    g=G;
	    m=g.size();
	    n=g[0].size();
	    used.assign(m,-1);
	    pre.assign(n,-1);
	    T=0;
	    
	    
	    for(int i=0;i<m;i++)
	    {
	        if(try_kuhn(i)) T++;
	    }
	    
	    return T;
	}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int m, n;
		cin >> m >> n;
		vector<vector<int>>G(m, vector<int>(n, 0));
		for(int i = 0; i < m; i++){
			for(int j = 0; j < n; j++)
				cin >> G[i][j];
		}
		Solution obj;
		int ans = obj.maximumMatch(G);
		cout << ans << "\n";    
	}
	return 0;
}
// } Driver Code Ends
